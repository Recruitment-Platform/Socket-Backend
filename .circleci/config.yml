version: 2.1

orbs:
  gradle: circleci/gradle@3.0.0
  tcc: atomicjar/testcontainers-cloud-orb@0.1.0
  slack: circleci/slack@4.4.4
  aws-cli: circleci/aws-cli@4.0
  aws-ecr: circleci/aws-ecr@9.0.0
  

executors:
  jdk17:
    docker:
      - image: cimg/openjdk:17.0.8

jobs:
  build-test:
    executor: jdk17
    steps:
      - checkout
      - run:
          name: run build and test
          command: gradle clean build -x test
      - run:
          name: run test coverage report sonarCloud
          command: gradle testCoverageSonar
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  deploy:
    executor: jdk17
    steps:
      - checkout
      - run:
          name: build x test
          command: gradle clean build -x test
      - run:
          name: set short sha
          command: |
            echo 'export SHORT_SHA=${CIRCLE_SHA1:0:7}' >> "$BASH_ENV"
            source "$BASH_ENV"
      - aws-cli/setup
      - aws-ecr/ecr_login:
          public_registry: true
      - run:
          name: push Image to ECR
          command: gradle jib
      - run:
          name: Allow Access to Production EC2
          command: |
            CIRCLE_CI_BUILD_MACHINE_IP=$(curl ipinfo.io/ip)

            aws ec2 authorize-security-group-ingress --region $AWS_REGION \
                                                   --group-id $AWS_EC2_SG_ID \
                                                   --protocol tcp \
                                                   --port 22 \
                                                   --cidr $CIRCLE_CI_BUILD_MACHINE_IP/24
      - run:
          name: Waiting for AWS Security Settings to Take Effect
          command: sleep 5
      - run:
          name: connect ec2 and deploy
          command: |
            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST SHORT_SHA=$SHORT_SHA AWS_ECR_URL=$AWS_ECR_URL sh > deploy.sh
      - run:
          name: Remove Circle CI Instance Ingress Rule
          command: |
            CIRCLE_CI_BUILD_MACHINE_IP=$(curl ipinfo.io/ip)

            aws ec2 revoke-security-group-ingress --region $AWS_REGION \
                                                          --group-id $AWS_EC2_SG_ID \
                                                          --protocol tcp \
                                                          --port 22 \
                                                          --cidr $CIRCLE_CI_BUILD_MACHINE_IP/24
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1


workflows:
  build-and-deploy:
    jobs:
      - build-test:
          pre-steps:
            - tcc/setup
          context: 
            - SonarCloud
            - slack-secret
            - prod-deploy
          filters:
            branches:
              ignore: main

      - deploy:
          context:
            - slack-secret
            - prod-deploy
          filters:
            branches:
              only:
                - main
          


